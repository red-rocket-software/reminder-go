// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/completed": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "GetCompletedReminds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reminds"
                ],
                "summary": "return a list of completed reminds",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cursor",
                        "name": "cursor",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "filter",
                        "name": "filter",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "filterOptions",
                        "name": "filterOptions",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "start of time range",
                        "name": "start",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "end of time range",
                        "name": "end",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.TodoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/current": {
            "get": {
                "description": "GetCurrentReminds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reminds"
                ],
                "summary": "return a list of current reminds",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cursor",
                        "name": "cursor",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "filter",
                        "name": "filter",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "filterOption",
                        "name": "filterOption",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.TodoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/remind": {
            "get": {
                "description": "GetAllReminds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reminds"
                ],
                "summary": "return a list of all reminds",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cursor",
                        "name": "cursor",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "filter",
                        "name": "filter",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "filterOptions",
                        "name": "filterOptions",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.TodoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "AddRemind",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reminds"
                ],
                "summary": "create a new remind",
                "parameters": [
                    {
                        "description": "remind info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.TodoInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/remind/{id}": {
            "get": {
                "description": "GetRemindByID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reminds"
                ],
                "summary": "return a remind by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Todo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "UpdateRemind",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reminds"
                ],
                "summary": "update remind with given fields",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.TodoUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/remind{id}": {
            "delete": {
                "description": "DeleteRemind",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reminds"
                ],
                "summary": "delete remind",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "remind with id:1 successfully deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/status/{id}": {
            "put": {
                "description": "UpdateCompleteStatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reminds"
                ],
                "summary": "update remind's field \"completed\"",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.TodoUpdateStatusInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "remind status updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/update-configs/{id}": {
            "put": {
                "description": "UpdateUserConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_config"
                ],
                "summary": "update user_config with given fields",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UserConfigs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Todo": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "deadline_at": {
                    "type": "string"
                },
                "deadline_notify": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "finished_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "notificated": {
                    "type": "boolean"
                },
                "notify_period": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "domain.TodoInput": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deadline_at": {
                    "type": "string"
                },
                "deadline_notify": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "notify_period": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "domain.TodoResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "pageInfo": {
                    "$ref": "#/definitions/pagination.PageInfo"
                },
                "todos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Todo"
                    }
                }
            }
        },
        "domain.TodoUpdateInput": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean"
                },
                "deadline_at": {
                    "type": "string"
                },
                "deadline_notify": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "finished_at": {
                    "type": "string"
                },
                "notificated": {
                    "type": "boolean"
                },
                "notify_period": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "domain.TodoUpdateStatusInput": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean"
                },
                "finished_at": {
                    "type": "string"
                }
            }
        },
        "domain.UserConfigs": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "notification": {
                    "type": "boolean"
                },
                "period": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "pagination.Page": {
            "type": "object",
            "properties": {
                "cursor": {
                    "description": "Cursor describes the position in the database to start from",
                    "type": "integer"
                },
                "filter": {
                    "description": "Filter describe filter params - by DeadlineAt or CreateAt",
                    "type": "string"
                },
                "filterOption": {
                    "description": "FilterOption describe filterOption params - DESC or ASC",
                    "type": "string"
                },
                "limit": {
                    "description": "Limit describes the number of records per request",
                    "type": "integer"
                }
            }
        },
        "pagination.PageInfo": {
            "type": "object",
            "properties": {
                "nextCursor": {
                    "description": "NextCursor describes the position of the next page",
                    "type": "integer"
                },
                "page": {
                    "description": "Page describes original request",
                    "allOf": [
                        {
                            "$ref": "#/definitions/pagination.Page"
                        }
                    ]
                }
            }
        },
        "utils.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Reminder App API",
	Description:      "API Server for Reminder Application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
