on: [push, pull_request]
name: CI

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: test_reminder
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: ^1.19

      - name: Install golang-migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate.linux-amd64 /usr/bin/migrate
          which migrate

      - name: Run migrations
        run: make migrateup_test

      - name: run test
        run: make test

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
        - name: Setup Go
          uses: actions/setup-go@v3.0.0
          with:
            go-version: 1.19

        - uses: actions/checkout@v2

        - name: golangci-lint
          uses: golangci/golangci-lint-action@v3.1.0
          with:
            # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
            version: v1.45.2
  
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/stage'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker Images
        run: |
          docker buildx build \
            --file Dockerfile \
            --tag your-image-tag \
            .

      - name: Login to Google Container Registry
        run: |
          docker buildx build \
            --file Dockerfile \
            --tag your-image-tag \
            .

      - name: Push Docker Image
        run: |
          docker push your-image-tag
    
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/stage'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          version: 'latest'
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: YOUR_PROJECT_ID

      - name: Configure Docker and Kubectl
        run: |
          gcloud --quiet components update
          gcloud --quiet components install kubectl
          gcloud auth configure-docker --quiet

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Deploy to GKE
        run: |
          helm upgrade --install your-release-name your-chart-directory \
            --set image.repository=gcr.io/YOUR_PROJECT_ID/your-image-tag \
            --set image.tag=latest \
            --set other-values=...

